import re
import string

def assess_password_strength(password):
    """Assess the strength of a password based on multiple criteria."""
    score = 0
    feedback = []
    
    # Length check
    length = len(password)
    if length >= 12:
        score += 30
        feedback.append("Good: Password length is 12 or more characters")
    elif length >= 8:
        score += 20
        feedback.append("Moderate: Password length is 8-11 characters")
    else:
        feedback.append("Weak: Password length is less than 8 characters")
    
    # Uppercase letters
    if re.search(r'[A-Z]', password):
        score += 15
        feedback.append("Good: Contains uppercase letters")
    else:
        feedback.append("Weak: No uppercase letters")
    
    # Lowercase letters
    if re.search(r'[a-z]', password):
        score += 15
        feedback.append("Good: Contains lowercase letters")
    else:
        feedback.append("Weak: No lowercase letters")
    
    # Numbers
    if re.search(r'\d', password):
        score += 15
        feedback.append("Good: Contains numbers")
    else:
        feedback.append("Weak: No numbers")
    
    # Special characters
    if re.search(r'[!@#$%^&*(),.?":{}|<>]', password):
        score += 15
        feedback.append("Good: Contains special characters")
    else:
        feedback.append("Weak: No special characters")
    
    # Common patterns penalty
    common_patterns = ['123', 'abc', 'password', 'qwerty']
    if any(pattern.lower() in password.lower() for pattern in common_patterns):
        score -= 10
        feedback.append("Warning: Contains common patterns")
    
    # Repeated characters penalty
    if re.search(r'(.)\1{2,}', password):
        score -= 10
        feedback.append("Warning: Contains repeated characters")
    
    # Determine strength based on score
    if score >= 80:
        strength = "Strong"
    elif score >= 60:
        strength = "Moderate"
    else:
        strength = "Weak"
    
    return {
        "score": score,
        "strength": strength,
        "feedback": feedback
    }

def main():
    print("Password Strength Assessment Tool")
    password = input("Enter password to assess: ")
    
    if not password:
        print("Error: Password cannot be empty!")
        return
    
    result = assess_password_strength(password)
    
    print("\nPassword Strength Analysis:")
    print(f"Score: {result['score']}/100")
    print(f"Strength: {result['strength']}")
    print("\nFeedback:")
    for item in result['feedback']:
        print(f"- {item}")
    
    print("\nRecommendations:")
    if result['score'] < 80:
        print("- Use at least 12 characters")
        print("- Include a mix of uppercase, lowercase, numbers, and special characters")
        print("- Avoid common patterns like '123' or 'password'")
        print("- Avoid repeating characters multiple times")

if __name__ == "__main__":
    main()
